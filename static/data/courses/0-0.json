{
  "head": {
    "chapter": {
      "id": 0,
      "value": "Javascript"
    },
    "title": "Avant propos et dialecte",
    "resume": "Client / Serveur, Javaquoi ?, HTeuMeuLeuh ?"
  },
  "intro": {
    "left": [
      {
        "type": "h3",
        "value": "Langages clients et langages serveurs"
      },
      {
        "type": "h4",
        "value": "Dans le monde merveilleux du web, il y a…"
      },
      {
        "type": "p",
        "value": "… Deux types de langages:"
      },
      {
        "type": "ul",
        "value": "<li><b>Les langages clients</b></li><li><b>Les langages serveurs</b></li>"
      },
      {
        "type": "p",
        "value": "Mais c’est quoi la différence ? Pourquoi n’y a-t-il pas qu’un seul langage ? Et pourquoi on est obligé de coder ? On va tout d’abord essayer de comprendre le fonctionnement d’un site web."
      }
    ],
    "right": [
      {
        "type": "img",
        "src": "0-0.gif",
        "alt": "Langages clients et langages serveurs"
      }
    ]
  },
  "content": [
    {
      "type": "h4",
      "value": "Tout est histoire de communication"
    },
    {
      "type": "p",
      "value": "Lorsqu’un visiteur se rend sur une adresse url (exemple: https://google.fr), l’ordinateur du visiteur demande en réalité à communiquer avec le serveur qui contient le site de Google pour qu’il lui affiche la page. Ce serveur a une adresse, on appelle ça une adresse IP. On peut le vérifier en tappant dans un terminal :"
    },
    {
      "type": "code",
      "language": "",
      "fileName": "Terminal",
      "value": "ping google.fr"
    },
    {
      "type": "p",
      "value": "On voit bien que le ping est envoyé à une adresse ip:"
    },
    {
      "type": "code",
      "language": "",
      "fileName": "Terminal",
      "value": "172.217.18.35"
    },
    {
      "type": "p",
      "class": "mb-8",
      "value": "Mais il serait trop complexe pour l’utilisateur de retenir chaque adresse IP de chaque site que l’on veut visiter. C’est pourquoi on donne un alias à ces adresses IP que l’on nomme une <b>adresse URL</b>. Pour résumer, quand tu visites une site, toi, <b>le client</b>, demandes au serveur d’afficher ses pages webs.</b>."
    },
    {
      "type": "h4",
      "value": "Et comment communiquent-t-ils ?"
    },
    {
      "type": "h5",
      "value": "Les langages clients"
    },
    {
      "type": "p",
      "value": "Pour afficher une page web, votre navigateur internet a besoin de comprendre ce que lui envoie le serveur. Le serveur va donc envoyer du code lisible à votre navigateur. C’est le <b>langage client</b>."
    },
    {
      "type": "p",
      "value": "Il y a plusieurs langages clients, notamment les plus courants :"
    },
    {
      "type": "ul",
      "value": "<li><b>Le HTML:</b> c’est la structure de votre page. C'est grâce à lui que tu créeras l'ossature de ton site. Exemple: Un bloc pour le titre, un autre bloc pour le contenu de mon article, etc...</li><li><b>le CSS:</b> c’est le style de votre page. C'est avec du CSS que tu diras que ton titre sera rouge et d'une taille de 32px, que le bloc du contenu de ton article sera sur la droite, etc...</li><li><b>le Javascript:</b> ce sont les interactions de ta page. Il te permettra par exemple de masquer du contenu au clic sur un bouton, de savoir à quelle hauteur de scroll tu te trouves, de te donner dynamiquement la largeur d'un bloc, etc...</li>"
    },
    {
      "type": "p",
      "value": "Si tu te rends sur un site web, n'importe lequel, que tu fais un clic droit sur la page et que tu cliques sur <b>Afficher le code source</b>, tu auras accès aux langages clients de ce site."
    },
    {
      "type": "p",
      "value": "Pas de panique, tu comprendras ces lignes de code rapidement si ce n'est pas déja le cas."
    },
    {
      "type": "h5",
      "value": "Et les langages serveurs alors ? "
    },
    {
      "type": "p",
      "value": "Ce sont des langages propres au serveur qui ne sont pas envoyés au client. Ces langages sont le moteur du site. C’est grâce à eux que tu vas pouvoir te connecter à votre compte Facebook, envoyer des messages sur Messenger, uploader une photo sur Instagram… Non je ne suis pas sponso par Mark Zuckerberg. <br>Il va de soit que ces lignes de codes ne doivent en aucun cas être visibles par le client sinon il pourrait directement accéder aux identifiants de la base de données, aux algorithmes brevetés, aux comptes des autres utilisateurs, etc… "
    },
    {
      "type": "p",
      "value": "Il y a également plusieurs langages côté serveur, notamment les plus courants :"
    },
    {
      "type": "ul",
      "value": "<li><b>Le PHP:</b> sûrement le langage serveur du web le plus connu et le plus utilisé.</li><li><b>Le Node JS:</b> c’est du Javascript mais côté serveur. Il monte en flèche depuis quelques années.</li><li><b>Le Ruby:</b> si tu es un acharné du code avec une syntaxe illisible et es persuadé que le Ruby c'est l'avenir, vas-y fonce l'apprendre...</li>"
    },
    {
      "type": "h5",
      "value": "En bref :"
    },
    {
      "type": "ul",
      "value": "<li>Les langages serveurs reçoivent les requêtes client et leur renvoient des données</li><li>Les langages clients reçoivent les données et les affichent avec style !</li>"
    },
    {
      "type": "p",
      "value": "Dans ce cours, nous ne verrons que du Javascript côté client et c'est déjà pas mal! Quand tu seras à l'aise avec l'algorithmie et les langages clients, tu pourras t'attaquer aux langages serveurs. <br>En attendant, commençons par le commencement: attaquons nous au DOM !"
    }
  ]
}